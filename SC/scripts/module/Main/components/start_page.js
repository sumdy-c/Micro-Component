const StartPage = (S, change) => {

    return S(DIV).append(
        S(SPAN, '.page_title').html('Приступая к работе'),
        alertBlock('🌟 Добро пожаловать в документацию библиотеки микрокомпонентов! 🌟', 
            [ 
                'Приветствуем вас, вы посетили документацию библиотеки "Micro Component" - которая легко интегрирует принципы управления состояниями и компонентами DOM через призму знаменитой библиотеки jQuery, обеспечивая вам изысканную и отзывчивую парадигму разработки.',
                'Это cреда, в которой создание и поддержка компонентов с изменяемым состоянием станет простым и интуитивно понятным занятием, повышая при этом коэффициент интерактивности ваших веб-страниц.',
                'Ваше путешествие в создании динамичных, интерактивных и многофункциональных веб-компонентов ( да именно компонентов ) начинается тут. Пусть ваши усилия по созданию веб-приложений будут полезными и плодотворными! 🚀'
            ]
        ),

        S(DIV, '.link_button_block').append(
            S(SPAN, '.link_button').html('Установка ⟶').on('click', () => {
                change('install');
            })
        ),

        S(DIV, '.link_button_block').append(
            S(SPAN, '.link_button').html('Начало изучения: Вызов и настройка ⟶').on('click', () => {
                change('settings');
            })
        ),

        alertBlock('JQuery морально устарел!!!', 
            [
                'По состоянию на текущее обновление документации в 2023 году следует признать, что фронтенд-разработка развивается. Распространение надежных и удобных инструментов, таких как React, Angular и Vue, действительно привело к смене парадигмы, уменьшив значимость jQuery в современной практике кодирования. Привлекательность этих фреймворков заключается в их современных возможностях, декларативном синтаксисе и эффективных архитектурах на основе компонентов.',
                'Однако на фоне этой трансформации важно признать, что значительная часть существующего исходного кода основана на jQuery. Долговечность и универсальность jQuery по-прежнему делают его прагматичным решением для различных начинаний в области веб-разработки. В то время как новые фреймворки процветают, jQuery остается надежным выбором, особенно в сценариях, где простота и прямое манипулирование DOM являются приоритетными.',
                'И до сих пор для определенных случаев и сценариев использования простота и легкость интеграции, обеспечиваемые jQuery, делают его привлекательным вариантом для разработчиков, ищущих прагматичные решения.'
            ]
        ),

        alertBlock('Почему стоит выбрать Micro Component?', 
            [ 
                'Причина кроется в присущей ей простоте, адаптивности и безупречной согласованности с устоявшимися рабочими процессами jQuery. Micro Component позволяет создавать внутри уже вашего написанного кода JQuery обновляемые компоненты, не влияя при этом на окружающий код, так же предоставляя новый подход в работе с css.',
                'При этом обеспечивая безопасность обновляемых компонентов, окружающего его кода и стилей. Micro Component, по сути, является вживляемыми компонентами с изолированием от внешнего воздействия.',
                'Будь то создание нового ресурса или поддержка старого, библиотека предоставляет необходимые инструменты для превращения ваших концепций разработки в реальность.'
            ]
        ),

        alertBlock('Примеры использования', 
            [ 
                'Исследуйте библиотеку в той самой документации, которую вы просматриваете. Эта страница разработана с использованием Micro Component и jQuery, чтобы показать бесшовный опыт работы. Стремясь к чистому и незамутненному опыту изучния библиотеки, было принято решение сознательно отказаться от многих инструментов современной фронтенд-разработки, полагаясь исключительно на библиотеку и одну единственную зависимость jQuery.',
                'Весь исходный код данной документации доступен на GitHub.'
            ]
        ),

        alertBlock('Открытость', 
            [ 
                'Библиотека Micro Component имеет открытый исходный код и доступна на GitHub, что обеспечивает прозрачность, сотрудничество и развитие сообщества. Посетите репозиторий GitHub, чтобы получить доступ к последним релизам, принять участие в текущих обсуждениях и использовать коллективный опыт сообщества разработчиков для улучшения и адаптации библиотеки к вашим конкретным потребностям.',
                'Изучайте, экспериментируйте и улучшайте свои проекты веб-разработки с помощью библиотеки Micro Component - это ваш путь к созданию динамичных, интерактивных и многофункциональных приложений. 🌐✨'
            ]
        ),

        S(DIV, '.link_button_block').append(
            S(SPAN, '.link_button').html('Посмотреть на GitHub ⟶').on('click', () => {
                window.location = 'https://github.com/sumdy-c/MicroComponent';
            })
        ),
        
    );
}