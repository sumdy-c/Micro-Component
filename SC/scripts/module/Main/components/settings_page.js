const SettingsPage = (S, change) => {

    return S(DIV).append(
        S(SPAN, '.page_title').html('Вызов и настройка'),
        S(SPAN, ['.big_text_size', '.page_sub_title']).html('1.1 Объект Micro Component'),
        
        alertBlock('Справка', 
            ['С текущего момента, такие блоки будут отмечать важные моменты']
        ),

        textBlock([
            'В начале нашей документации мы рассмотрим основные шаги, необходимые для создания и настройки объекта MicroComponent. Чтобы использовать возможности библиотеки, начните с инстанцирования объекта.',
            'Для этого можно использовать следующий синтаксис:'
        ]),
        
        codeBlock('const S = new MicroComponent({}).use([]);'),

        textBlock([
            'Здесь S - это функция, которая берет на себя роль, традиционно выполняемую $ в JQuery. Этот объект служит шлюзом для эффективного манипулирования DOM, мутацией CSS и управления состоянием.'
        ]),
            
        S(SPAN, ['.big_text_size', '.page_sub_title']).html('1.2 Конфигурация'),

        textBlock([
            'Каждый объект MicroComponent наделен рядом настраиваемых параметров, позволяющих точно настроить его поведение в соответствии с вашими требованиями. Конструктор класса принимает объект, содержащий эти параметры.',
            'Применение различных параметров будет подробнее рассмотрено в разделе "Подход к разработке".'
        ]),

        codeBlock(
`{
    mutateCSS: boolean
}`
        ),

        textBlock([
            ' - параметр при получении которого Micro Component будет мутировать названия классов css. Сразу стоит отметить, что мутация будет безопасно происходить только в контексте разных объектов.'
        ]),

        codeBlock(  
`{
    deleteNativeCSS: boolean
}`
),
        textBlock([
            ' - параметр, который удаляет нативный CSS код из области видимости документа.',
            'Не используйте его если вы не уверены что вы делаете.'
        ]),
        
        codeBlock(
`{
    offWarn: boolean
}`
        ),

        S(SPAN, '.page_text').html(
            ' - отключает предупреждения от Micro Component. Как правило вы не должны его использовать, Micro Component старается предупредить о довольно серьёзных проблемах.',
        ),

        alertBlock('Для сообщества разработчиков', 
            [
                'Если вы решите изучить работу библиотеки, будь то для личных нужд или для того, чтобы внести свой вклад в развитие, это приветствуется в любом случае,',
                'но в процессе вы можете найти "следы" гораздо большего количества параметров. Кое-что готовится к следующему релизу, а кое-что, наоборот, будет удалено.',
                'Пожалуйста, не используйте параметры, которые вы можете увидеть, если вы не уверены в том, что делаете.',
            ]
        ),

        S(SPAN, ['.big_text_size', '.page_sub_title']).html('1.3 Использование .use([...])'),

        textBlock([
            'Параметры в конструкторе класса в версии документации которую вы просматриваете закончились, но остался метод инициализации, который вы используете при вызове объекта.'
        ]),

        codeBlock(`.use(['example.css']);`),

        textBlock([
            'Это важное уточнение для полной работы Micro Component. Указав список файлов .css вы выделяете их из общего потока css кода и позволяете их сканирование.',
            'Есть несколько аспектов применения которые мы обсудим в следующем разделе, но на данном этапе вам просто следует подключить ваш file.css в index.html ( если вы используете функции сборки, вы можете доставить .css с их помощью ) и указать его название в массиве, как параметр метода .use, после этого настройка будет завершена. Как результат вашей работы, у вас могла получиться следующая сущность:'
        ]),

        codeBlock(
`// Отсутствие offWarn, то же самое, что и offWarn: false
const S = new MicroComponent({ mutateCSS: true, deleteNativeCSS: true }).use(['file.css', 'example.css']);
`
),

        textBlock([
            'Технически вы уже можете использовать S вместо $ и даже попытаться получить результат, но Micro Component не так явно указывает на выполнение своих функций, как JQuery.',
            'Тем не менее, она родилась из идеи совместить новые подходы к разработке с ранее написанным кодом, поэтому старается быть максимально понятной.',
            'А чтобы увидеть, как использовать библиотеку в полном объеме, взгляните на следующий раздел.'
        ]),


        S(DIV, '.link_button_block').append(
            S(SPAN, '.link_button').html('Первое погружение: Подход к разработке ⟶').on('click', () => {
                change('dev');
            })
        ),
    );
}